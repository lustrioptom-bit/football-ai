# web/app.py
import streamlit as st
import requests
import pandas as pd
from io import StringIO
import threading
import time
from datetime import datetime
from config import TOKEN, MAIN_CHAT_ID

# === –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö ===
def load_data():
    url = "https://www.football-data.co.uk/mmz4281/2324/E0.csv"
    try:
        df = pd.read_csv(StringIO(requests.get(url).text))
        df['Date'] = pd.to_datetime(df['Date'], dayfirst=True, errors='coerce')
        return df
    except Exception as e:
        st.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {e}")
        return pd.DataFrame()

# === –ü—Ä–æ–≥–Ω–æ–∑ –º–∞—Ç—á–∞ ===
def predict_match(team1, team2, df):
    home_games = df[df['HomeTeam'] == team1]
    away_games = df[df['AwayTeam'] == team2]
    xG1 = home_games['FTHG'].mean() if len(home_games) > 0 else 1.5
    xG2 = away_games['FTAG'].mean() if len(away_games) > 0 else 1.2
    result = "HomeAs Winner" if xG1 > xG2 + 0.3 else "AwayAs Winner" if xG2 > xG1 + 0.3 else "Draw"
    return f"üîÆ {result}\nxG: {xG1:.2f} ‚Äî {xG2:.2f}"

# === Telegram-–±–æ—Ç –≤ —Ñ–æ–Ω–µ ===
def run_telegram_bot():
    BASE_URL = f"https://api.telegram.org/bot{TOKEN}/"
    df = load_data()
    offset = None
    st.write("‚úÖ Telegram-–±–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ —Ñ–æ–Ω–µ...")

    while True:
        try:
            params = {"timeout": 30}
            if offset:
                params["offset"] = offset

            response = requests.get(BASE_URL + "getUpdates", params=params, timeout=35)
            data = response.json()

            if not data["ok"] or not data["result"]:
                time.sleep(1)
                continue

            for item in data["result"]:
                offset = item["update_id"] + 1
                msg = item["message"]
                chat_id = msg["chat"]["id"]
                text = msg.get("text", "")

                if text == "/start":
                    requests.post(BASE_URL + "sendMessage", data={
                        "chat_id": chat_id,
                        "text": "üëã –ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî AI Football Analyst üèÜ\n\n–ò—Å–ø–æ–ª—å–∑—É–π:\n‚Ä¢ /predict Arsenal Man City"
                    })

                elif text.startswith("/predict"):
                    args = text.split()[1:]
                    if len(args) < 2:
                        requests.post(BASE_URL + "sendMessage", data={
                            "chat_id": chat_id,
                            "text": "‚ùå –§–æ—Ä–º–∞—Ç: /predict –ö–æ–º–∞–Ω–¥–∞1 –ö–æ–º–∞–Ω–¥–∞2"
                        })
                    else:
                        team1 = args[0]
                        team2 = " ".join(args[1:])
                        if df.empty:
                            requests.post(BASE_URL + "sendMessage", data={
                                "chat_id": chat_id,
                                "text": "‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"
                            })
                        else:
                            pred = predict_match(team1, team2, df)
                            requests.post(BASE_URL + "sendMessage", data={
                                "chat_id": chat_id,
                                "text": pred
                            })

            time.sleep(1)

        except Exception as e:
            print(f"Telegram error: {e}")
            time.sleep(5)

# === –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ –ø–æ—Ç–æ–∫–µ (–æ–¥–∏–Ω —Ä–∞–∑) ===
if 'bot_thread_started' not in st.session_state:
    st.session_state.bot_thread_started = True
    thread = threading.Thread(target=run_telegram_bot, daemon=True)
    thread.start()

# === –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å ===
st.set_page_config(page_title="‚öΩ AI Football Analyst", layout="wide")
st.title("üéØ AI Football Analyst Pro")

df = load_data()
if df.empty:
    st.warning("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ")
else:
    st.success("‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")

st.header("üìä –ü—Ä–æ–≥–Ω–æ–∑ –º–∞—Ç—á–∞")
team1 = st.text_input("–ö–æ–º–∞–Ω–¥–∞ 1", "Arsenal")
team2 = st.text_input("–ö–æ–º–∞–Ω–¥–∞ 2", "Man City")

if st.button("–ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞—Ç—å"):
    if df.empty:
        st.error("‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö")
    else:
        pred = predict_match(team1, team2, df)
        st.success(pred)
